{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "APIManagementServiceName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The service name"
      }
    },
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium",
        "Consumption" 
      ],
      "defaultValue": "Consumption",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "apiClientId": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Description can be here"
      }
     },
    "apiClientSecret": {
      "type": "SecureString",
      "minLength": 1,
      "metadata": {
        "description": "Description can be here"
      }
     },
    "blobBaseUrl": {
      "type": "SecureString",
      "minLength": 1,
      "metadata": {
        "description": "Description can be here"
      }
     },
    "clientId": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Description can be here"
      }
     },
    "identityServerBaseUrl": {
      "type": "SecureString",
      "minLength": 1,
      "metadata": {
        "description": "Description can be here"
      }
     },
    "infectionApiBaseUrl": {
      "type": "SecureString",
      "minLength": 1,
      "metadata": {
        "description": "Description can be here"
      }
     },
    "scope": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Description can be here"
      }
     },
    "userApiBaseUrl": {
      "type": "SecureString",
      "minLength": 1,
      "metadata": {
        "description": "Description can be here"
      }
     }
  },
  "resources": [
    {
      "apiVersion": "2019-12-01",
      "name": "[parameters('APIManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[parameters('location')]",
      "tags": {},
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]"
      }
    },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('APIManagementServiceName'), '/ApiCleintId')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "apiClientId",
                "tags": [],
                "secret": false,
                "value": "[parameters('apiClientId')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('APIManagementServiceName'), '/ApiClientSecret')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "apiClientSecret",
                "tags": [],
                "secret": true,
                "value": "[parameters('apiClientSecret')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('APIManagementServiceName'), '/blobBaseUrl')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "blobBaseUrl",
                "tags": [],
                "secret": true,
                "value": "[parameters('blobBaseUrl')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('APIManagementServiceName'), '/clientId')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "clientId",
                "tags": [],
                "secret": false,
                "value": "[parameters('clientId')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('APIManagementServiceName'), '/identityServerBaseUrl')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "identityServerBaseUrl",
                "tags": [],
                "secret": true,
                "value": "[parameters('identityServerBaseUrl')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('APIManagementServiceName'), '/infectionApiBaseUrl')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "infectionApiBaseUrl",
                "tags": [],
                "secret": true,
                "value": "[parameters('infectionApiBaseUrl')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('APIManagementServiceName'), '/scope')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "scope",
                "tags": [],
                "secret": false,
                "value": "[parameters('scope')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('APIManagementServiceName'), '/userApiBaseUrl')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "userApiBaseUrl",
                "tags": [],
                "secret": true,
                "value": "[parameters('userApiBaseUrl')]"
            }
        },
    {
      "name": "[concat(parameters('APIManagementServiceName'), '/Configuration')]",
      "type": "Microsoft.ApiManagement/service/tags",
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "Configuration"
      }
    },
    {
      "name": "[concat(parameters('APIManagementServiceName'), '/Doctors')]",
      "type": "Microsoft.ApiManagement/service/tags",
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "Doctors"
      }
    },
    {
      "name": "[concat(parameters('APIManagementServiceName'), '/Infections')]",
      "type": "Microsoft.ApiManagement/service/tags",
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "Infections"
      }
    },
    {
      "name": "[concat(parameters('APIManagementServiceName'), '/Infection-Service')]",
      "type": "Microsoft.ApiManagement/service/tags",
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "Infection Service"
      }
    },
    {
      "name": "[concat(parameters('APIManagementServiceName'), '/Info-Service')]",
      "type": "Microsoft.ApiManagement/service/tags",
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "Info Service"
      }
    },
    {
      "name": "[concat(parameters('APIManagementServiceName'), '/Meetings')]",
      "type": "Microsoft.ApiManagement/service/tags",
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "Meetings"
      }
    },
    {
      "name": "[concat(parameters('APIManagementServiceName'), '/Tokens')]",
      "type": "Microsoft.ApiManagement/service/tags",
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "Tokens"
      }
    },
    {
      "name": "[concat(parameters('APIManagementServiceName'), '/User-Service')]",
      "type": "Microsoft.ApiManagement/service/tags",
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('APIManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "User Service"
      }
    }
  ]
}